// Generated by view binder compiler. Do not edit!
package com.extrotarget.extropos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.extrotarget.extropos.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAppLockBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ProgressBar loadingProgressBar;

  @NonNull
  public final MaterialButton logoutButton;

  @NonNull
  public final MaterialButton resendEmailButton;

  @NonNull
  public final TextView statusTextView;

  private FragmentAppLockBinding(@NonNull LinearLayout rootView,
      @NonNull ProgressBar loadingProgressBar, @NonNull MaterialButton logoutButton,
      @NonNull MaterialButton resendEmailButton, @NonNull TextView statusTextView) {
    this.rootView = rootView;
    this.loadingProgressBar = loadingProgressBar;
    this.logoutButton = logoutButton;
    this.resendEmailButton = resendEmailButton;
    this.statusTextView = statusTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAppLockBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAppLockBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_app_lock, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAppLockBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.loadingProgressBar;
      ProgressBar loadingProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgressBar == null) {
        break missingId;
      }

      id = R.id.logoutButton;
      MaterialButton logoutButton = ViewBindings.findChildViewById(rootView, id);
      if (logoutButton == null) {
        break missingId;
      }

      id = R.id.resendEmailButton;
      MaterialButton resendEmailButton = ViewBindings.findChildViewById(rootView, id);
      if (resendEmailButton == null) {
        break missingId;
      }

      id = R.id.statusTextView;
      TextView statusTextView = ViewBindings.findChildViewById(rootView, id);
      if (statusTextView == null) {
        break missingId;
      }

      return new FragmentAppLockBinding((LinearLayout) rootView, loadingProgressBar, logoutButton,
          resendEmailButton, statusTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
