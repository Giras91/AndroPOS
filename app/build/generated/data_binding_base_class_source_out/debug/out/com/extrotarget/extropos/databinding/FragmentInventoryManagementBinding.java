// Generated by view binder compiler. Do not edit!
package com.extrotarget.extropos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.extrotarget.extropos.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInventoryManagementBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final FloatingActionButton addCategoryFab;

  @NonNull
  public final FloatingActionButton addProductFab;

  @NonNull
  public final TabLayout inventoryTabs;

  @NonNull
  public final ViewPager2 inventoryViewPager;

  @NonNull
  public final Toolbar toolbar;

  private FragmentInventoryManagementBinding(@NonNull CoordinatorLayout rootView,
      @NonNull FloatingActionButton addCategoryFab, @NonNull FloatingActionButton addProductFab,
      @NonNull TabLayout inventoryTabs, @NonNull ViewPager2 inventoryViewPager,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.addCategoryFab = addCategoryFab;
    this.addProductFab = addProductFab;
    this.inventoryTabs = inventoryTabs;
    this.inventoryViewPager = inventoryViewPager;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInventoryManagementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInventoryManagementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_inventory_management, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInventoryManagementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addCategoryFab;
      FloatingActionButton addCategoryFab = ViewBindings.findChildViewById(rootView, id);
      if (addCategoryFab == null) {
        break missingId;
      }

      id = R.id.addProductFab;
      FloatingActionButton addProductFab = ViewBindings.findChildViewById(rootView, id);
      if (addProductFab == null) {
        break missingId;
      }

      id = R.id.inventoryTabs;
      TabLayout inventoryTabs = ViewBindings.findChildViewById(rootView, id);
      if (inventoryTabs == null) {
        break missingId;
      }

      id = R.id.inventoryViewPager;
      ViewPager2 inventoryViewPager = ViewBindings.findChildViewById(rootView, id);
      if (inventoryViewPager == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentInventoryManagementBinding((CoordinatorLayout) rootView, addCategoryFab,
          addProductFab, inventoryTabs, inventoryViewPager, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
