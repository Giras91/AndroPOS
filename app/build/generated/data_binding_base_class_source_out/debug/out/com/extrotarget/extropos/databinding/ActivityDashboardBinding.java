// Generated by view binder compiler. Do not edit!
package com.extrotarget.extropos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.LinearLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.extrotarget.extropos.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDashboardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView accountText;

  @NonNull
  public final TextView actionStatus;

  @NonNull
  public final TextView appTitle;

  @NonNull
  public final ItemDashboardButtonBinding btnCashRegister;

  @NonNull
  public final ItemDashboardButtonBinding btnCustomers;

  @NonNull
  public final ItemDashboardButtonBinding btnReport;

  @NonNull
  public final ItemDashboardButtonBinding btnSettings;

  @NonNull
  public final ItemDashboardButtonBinding btnTable;

  @NonNull
  public final TextView customersCount;

  @NonNull
  public final TextView customersLabel;

  @NonNull
  public final ConstraintLayout dashboardColumns;

  @NonNull
  public final FloatingActionButton fabPdf;

  @NonNull
  public final LinearLayout headerBar;

  @NonNull
  public final HorizontalScrollView leftScroll;

  @NonNull
  public final TextView loggedInRoleText;

  @NonNull
  public final LinearLayout mainButtonGrid;

  @NonNull
  public final TextView metricsTitle;

  @NonNull
  public final TextView ordersCount;

  @NonNull
  public final TextView ordersLabel;

  @NonNull
  public final RecyclerView recentSalesRecycler;

  @NonNull
  public final TextView recentTitle;

  @NonNull
  public final LinearLayout rightPanel;

  @NonNull
  public final Switch switchGuideMode;

  @NonNull
  public final Switch switchTrainingMode;

  @NonNull
  public final TextView totalSales;

  @NonNull
  public final TextView totalSalesLabel;

  private ActivityDashboardBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView accountText, @NonNull TextView actionStatus, @NonNull TextView appTitle,
      @NonNull ItemDashboardButtonBinding btnCashRegister,
      @NonNull ItemDashboardButtonBinding btnCustomers,
      @NonNull ItemDashboardButtonBinding btnReport,
      @NonNull ItemDashboardButtonBinding btnSettings, @NonNull ItemDashboardButtonBinding btnTable,
      @NonNull TextView customersCount, @NonNull TextView customersLabel,
      @NonNull ConstraintLayout dashboardColumns, @NonNull FloatingActionButton fabPdf,
      @NonNull LinearLayout headerBar, @NonNull HorizontalScrollView leftScroll,
      @NonNull TextView loggedInRoleText, @NonNull LinearLayout mainButtonGrid,
      @NonNull TextView metricsTitle, @NonNull TextView ordersCount, @NonNull TextView ordersLabel,
      @NonNull RecyclerView recentSalesRecycler, @NonNull TextView recentTitle,
      @NonNull LinearLayout rightPanel, @NonNull Switch switchGuideMode,
      @NonNull Switch switchTrainingMode, @NonNull TextView totalSales,
      @NonNull TextView totalSalesLabel) {
    this.rootView = rootView;
    this.accountText = accountText;
    this.actionStatus = actionStatus;
    this.appTitle = appTitle;
    this.btnCashRegister = btnCashRegister;
    this.btnCustomers = btnCustomers;
    this.btnReport = btnReport;
    this.btnSettings = btnSettings;
    this.btnTable = btnTable;
    this.customersCount = customersCount;
    this.customersLabel = customersLabel;
    this.dashboardColumns = dashboardColumns;
    this.fabPdf = fabPdf;
    this.headerBar = headerBar;
    this.leftScroll = leftScroll;
    this.loggedInRoleText = loggedInRoleText;
    this.mainButtonGrid = mainButtonGrid;
    this.metricsTitle = metricsTitle;
    this.ordersCount = ordersCount;
    this.ordersLabel = ordersLabel;
    this.recentSalesRecycler = recentSalesRecycler;
    this.recentTitle = recentTitle;
    this.rightPanel = rightPanel;
    this.switchGuideMode = switchGuideMode;
    this.switchTrainingMode = switchTrainingMode;
    this.totalSales = totalSales;
    this.totalSalesLabel = totalSalesLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accountText;
      TextView accountText = ViewBindings.findChildViewById(rootView, id);
      if (accountText == null) {
        break missingId;
      }

      id = R.id.actionStatus;
      TextView actionStatus = ViewBindings.findChildViewById(rootView, id);
      if (actionStatus == null) {
        break missingId;
      }

      id = R.id.appTitle;
      TextView appTitle = ViewBindings.findChildViewById(rootView, id);
      if (appTitle == null) {
        break missingId;
      }

      id = R.id.btn_cash_register;
      View btnCashRegister = ViewBindings.findChildViewById(rootView, id);
      if (btnCashRegister == null) {
        break missingId;
      }
      ItemDashboardButtonBinding binding_btnCashRegister = ItemDashboardButtonBinding.bind(btnCashRegister);

      id = R.id.btn_customers;
      View btnCustomers = ViewBindings.findChildViewById(rootView, id);
      if (btnCustomers == null) {
        break missingId;
      }
      ItemDashboardButtonBinding binding_btnCustomers = ItemDashboardButtonBinding.bind(btnCustomers);

      id = R.id.btn_report;
      View btnReport = ViewBindings.findChildViewById(rootView, id);
      if (btnReport == null) {
        break missingId;
      }
      ItemDashboardButtonBinding binding_btnReport = ItemDashboardButtonBinding.bind(btnReport);

      id = R.id.btn_settings;
      View btnSettings = ViewBindings.findChildViewById(rootView, id);
      if (btnSettings == null) {
        break missingId;
      }
      ItemDashboardButtonBinding binding_btnSettings = ItemDashboardButtonBinding.bind(btnSettings);

      id = R.id.btn_table;
      View btnTable = ViewBindings.findChildViewById(rootView, id);
      if (btnTable == null) {
        break missingId;
      }
      ItemDashboardButtonBinding binding_btnTable = ItemDashboardButtonBinding.bind(btnTable);

      id = R.id.customersCount;
      TextView customersCount = ViewBindings.findChildViewById(rootView, id);
      if (customersCount == null) {
        break missingId;
      }

      id = R.id.customersLabel;
      TextView customersLabel = ViewBindings.findChildViewById(rootView, id);
      if (customersLabel == null) {
        break missingId;
      }

      id = R.id.dashboardColumns;
      ConstraintLayout dashboardColumns = ViewBindings.findChildViewById(rootView, id);
      if (dashboardColumns == null) {
        break missingId;
      }

      id = R.id.fabPdf;
      FloatingActionButton fabPdf = ViewBindings.findChildViewById(rootView, id);
      if (fabPdf == null) {
        break missingId;
      }

      id = R.id.headerBar;
      LinearLayout headerBar = ViewBindings.findChildViewById(rootView, id);
      if (headerBar == null) {
        break missingId;
      }

      id = R.id.leftScroll;
      HorizontalScrollView leftScroll = ViewBindings.findChildViewById(rootView, id);
      if (leftScroll == null) {
        break missingId;
      }

      id = R.id.loggedInRoleText;
      TextView loggedInRoleText = ViewBindings.findChildViewById(rootView, id);
      if (loggedInRoleText == null) {
        break missingId;
      }

      id = R.id.mainButtonGrid;
      LinearLayout mainButtonGrid = ViewBindings.findChildViewById(rootView, id);
      if (mainButtonGrid == null) {
        break missingId;
      }

      id = R.id.metricsTitle;
      TextView metricsTitle = ViewBindings.findChildViewById(rootView, id);
      if (metricsTitle == null) {
        break missingId;
      }

      id = R.id.ordersCount;
      TextView ordersCount = ViewBindings.findChildViewById(rootView, id);
      if (ordersCount == null) {
        break missingId;
      }

      id = R.id.ordersLabel;
      TextView ordersLabel = ViewBindings.findChildViewById(rootView, id);
      if (ordersLabel == null) {
        break missingId;
      }

      id = R.id.recent_sales_recycler;
      RecyclerView recentSalesRecycler = ViewBindings.findChildViewById(rootView, id);
      if (recentSalesRecycler == null) {
        break missingId;
      }

      id = R.id.recentTitle;
      TextView recentTitle = ViewBindings.findChildViewById(rootView, id);
      if (recentTitle == null) {
        break missingId;
      }

      id = R.id.rightPanel;
      LinearLayout rightPanel = ViewBindings.findChildViewById(rootView, id);
      if (rightPanel == null) {
        break missingId;
      }

      id = R.id.switchGuideMode;
      Switch switchGuideMode = ViewBindings.findChildViewById(rootView, id);
      if (switchGuideMode == null) {
        break missingId;
      }

      id = R.id.switchTrainingMode;
      Switch switchTrainingMode = ViewBindings.findChildViewById(rootView, id);
      if (switchTrainingMode == null) {
        break missingId;
      }

      id = R.id.totalSales;
      TextView totalSales = ViewBindings.findChildViewById(rootView, id);
      if (totalSales == null) {
        break missingId;
      }

      id = R.id.totalSalesLabel;
      TextView totalSalesLabel = ViewBindings.findChildViewById(rootView, id);
      if (totalSalesLabel == null) {
        break missingId;
      }

      return new ActivityDashboardBinding((ConstraintLayout) rootView, accountText, actionStatus,
          appTitle, binding_btnCashRegister, binding_btnCustomers, binding_btnReport,
          binding_btnSettings, binding_btnTable, customersCount, customersLabel, dashboardColumns,
          fabPdf, headerBar, leftScroll, loggedInRoleText, mainButtonGrid, metricsTitle,
          ordersCount, ordersLabel, recentSalesRecycler, recentTitle, rightPanel, switchGuideMode,
          switchTrainingMode, totalSales, totalSalesLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
