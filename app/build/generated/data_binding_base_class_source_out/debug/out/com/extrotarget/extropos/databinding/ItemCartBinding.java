// Generated by data binding compiler. Do not edit!
package com.extrotarget.extropos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.extrotarget.extropos.R;
import com.google.android.material.button.MaterialButton;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemCartBinding extends ViewDataBinding {
  @NonNull
  public final MaterialButton decreaseButton;

  @NonNull
  public final MaterialButton increaseButton;

  @NonNull
  public final TextView productNameTextView;

  @NonNull
  public final TextView quantityTextView;

  @NonNull
  public final MaterialButton removeButton;

  @NonNull
  public final TextView totalPriceTextView;

  @NonNull
  public final TextView unitPriceTextView;

  protected ItemCartBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MaterialButton decreaseButton, MaterialButton increaseButton, TextView productNameTextView,
      TextView quantityTextView, MaterialButton removeButton, TextView totalPriceTextView,
      TextView unitPriceTextView) {
    super(_bindingComponent, _root, _localFieldCount);
    this.decreaseButton = decreaseButton;
    this.increaseButton = increaseButton;
    this.productNameTextView = productNameTextView;
    this.quantityTextView = quantityTextView;
    this.removeButton = removeButton;
    this.totalPriceTextView = totalPriceTextView;
    this.unitPriceTextView = unitPriceTextView;
  }

  @NonNull
  public static ItemCartBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_cart, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemCartBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemCartBinding>inflateInternal(inflater, R.layout.item_cart, root, attachToRoot, component);
  }

  @NonNull
  public static ItemCartBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_cart, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemCartBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemCartBinding>inflateInternal(inflater, R.layout.item_cart, null, false, component);
  }

  public static ItemCartBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemCartBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemCartBinding)bind(component, view, R.layout.item_cart);
  }
}
