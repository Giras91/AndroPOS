// Generated by view binder compiler. Do not edit!
package com.extrotarget.extropos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.extrotarget.extropos.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPrinterBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView connectionTypeTextView;

  @NonNull
  public final TextView defaultBadge;

  @NonNull
  public final Button deleteButton;

  @NonNull
  public final TextView printerNameTextView;

  @NonNull
  public final TextView printerTypeTextView;

  @NonNull
  public final View statusIndicator;

  @NonNull
  public final Button testPrintButton;

  private ItemPrinterBinding(@NonNull MaterialCardView rootView,
      @NonNull TextView connectionTypeTextView, @NonNull TextView defaultBadge,
      @NonNull Button deleteButton, @NonNull TextView printerNameTextView,
      @NonNull TextView printerTypeTextView, @NonNull View statusIndicator,
      @NonNull Button testPrintButton) {
    this.rootView = rootView;
    this.connectionTypeTextView = connectionTypeTextView;
    this.defaultBadge = defaultBadge;
    this.deleteButton = deleteButton;
    this.printerNameTextView = printerNameTextView;
    this.printerTypeTextView = printerTypeTextView;
    this.statusIndicator = statusIndicator;
    this.testPrintButton = testPrintButton;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPrinterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPrinterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_printer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPrinterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.connectionTypeTextView;
      TextView connectionTypeTextView = ViewBindings.findChildViewById(rootView, id);
      if (connectionTypeTextView == null) {
        break missingId;
      }

      id = R.id.defaultBadge;
      TextView defaultBadge = ViewBindings.findChildViewById(rootView, id);
      if (defaultBadge == null) {
        break missingId;
      }

      id = R.id.deleteButton;
      Button deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.printerNameTextView;
      TextView printerNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (printerNameTextView == null) {
        break missingId;
      }

      id = R.id.printerTypeTextView;
      TextView printerTypeTextView = ViewBindings.findChildViewById(rootView, id);
      if (printerTypeTextView == null) {
        break missingId;
      }

      id = R.id.statusIndicator;
      View statusIndicator = ViewBindings.findChildViewById(rootView, id);
      if (statusIndicator == null) {
        break missingId;
      }

      id = R.id.testPrintButton;
      Button testPrintButton = ViewBindings.findChildViewById(rootView, id);
      if (testPrintButton == null) {
        break missingId;
      }

      return new ItemPrinterBinding((MaterialCardView) rootView, connectionTypeTextView,
          defaultBadge, deleteButton, printerNameTextView, printerTypeTextView, statusIndicator,
          testPrintButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
